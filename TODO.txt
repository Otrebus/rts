+ Turn InputQueue into serving the user with a bunch of stuff that happened since the last query, like: key was held for this long (even though it might still be held), key was pressed+released. Maybe three different types of events - pressed, pressed+held, released. Removes the need from having to write to timeKey when it was last read, and ugly stuff like that
+ Add some hotkey for changing how the terrain renders - flat, wireframe, normal, and switches between them
+ Make the camera move slower along the terrain instead etc
+ Make camera switch between terrain following and freelook with some key
+ Add some way of drawing lines
+ Fix bmp writing
+ Setting camera position and transform in the materials classes seems a bit weird
+ Fix fov setting
+ Fix cam initialization (specially up)
+ Add entity system and selection mechanics (point/box)
+ Triangle picking doesn't pick the closest triangle
+ Work out the relationship between mesh3d and linemesh3d, the latter inherits a bunch of stuff it doesn't need from the former, they should inherit from a common base model or something
+ Fix a better way of assigning a color to selected bounding boxes
+ Remove all the mousestates and keystates of input outside input
+ Fix cameramodes
+ Selecting units and moving
+ Implement path finding
+ Figure out aspect ratio in debug mode
+ Unit picker/dropper
+ Unit collision detection
+ Boids:
  + Wall avoidance
  + Obstacle avoidance
  + Separation
+ Multithreaded path finding
- Add terrain/unit visualisations of all sorts (lines, arrows, dots, etc)
- Debug console
- Reduce jittering: make velocityTarget exponentially averaged?
+ Degree suffix (that converts from degrees to radians?)
- General refactoring, like ctrl+f "stuff like this should be moved to a more specialized place"
- Fix and optimize intersectCirclePathOcclusion for longer searches
+ Scrollzoom towards pointer
+ Left-multiplication by scalar t*A
- Make a better point picker function (viewray (should be ray)/terrain intersect)
+ Change setUp and setup
- Maybe t = inf is better to return when there's no intersection
+ Make camera polymorphic instead of using debug=true
- Make entity virtual base
- Fix normals for intersectCircleTrianglePath when the circle is inside the triangle
- Make sure derived classes have virtual destructors
- Move boundingbox mesh construction out of Entity
- Make inputqueue all static and remove getInstance
+ Breakacc vs forwardacc
- Review the two vertex shaders for lines, if we can unify them
- Now that we have geometric normals we don't really need to create a new mesh for flat rendering
- Fix flat terrain shading
- Remove the selecttriangle stuff, not needed anymore
- Terrain set scene / scene set terrain?
- Figure out mesh ownership
- Work out memory leaks
- Work out ownership of resources
- Unify keyinput and mouseinput in inputqueue
